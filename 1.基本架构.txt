1. 创建普通maven工程 destiny-parent, destiny-util，destiny-bean，  springboot 工程 destiny-controller, destiny-service
2. 各个工程模块介绍
destiny-parent    
	jar版本控制。 其他模块都需要继承该模块， 而该模块去基础与springboot模块原来的父类， 即
	<parent>
   	   	<groupId>org.springframework.boot</groupId>
    	   	<artifactId>spring-boot-starter-parent</artifactId>
    	  	<version>1.5.21.RELEASE</version>
    	    	<relativePath/> <!-- lookup parent from repository -->
	</parent>

destiny-util   
	存放除destiny-parent 外， 其他模块需要用到的jar， 其余需要该jar的模块都必须导入该jar
	如 destiny-controller 需要 dubbo ， 则 dubbo声明与 destiny-util 而 destiny-controller 声明 destiny-util即可
	<dependency>
         	   	<groupId>com.destiny.maven</groupId>
      	      	<artifactId>destiny-util</artifactId>
         	   	<version>1.0-SNAPSHOT</version>
	</dependency>

destiny-bean
	存放项目需要的bean，还有service的接口

destiny-controller 
	存放controller 层

destiny-service 
	存放service， dao 层


dubbo的声明

#dubbo服务名称
spring.dubbo.application=destiny-service
#dubbo协议名称
spring.dubbo.protocol.name=dubbo
#dubbo注册中心地址
spring.dubbo.registry.address=192.168.124.10:2181
#zooker通信协议名称
spring.dubbo.registry.protocol=zookeeper
#dubbo服务的扫描路径
spring.dubbo.base-package=com.destiny.maven.destinyservice
